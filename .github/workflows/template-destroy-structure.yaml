name: 'template-destroy-structure'

on:
  workflow_call:
    inputs:
      backend_resource_group_name:
        required: true
        type: string
      backend_storage_account_name:
        required: true
        type: string
      backend_container_name:
        required: true
        type: string
      backend_key:
        required: true
        type: string
      working_directory:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  terraform-test:
    name: 'Terraform'
    environment: ${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      BACKEND_RESOURCE_GROUP_NAME: ${{ inputs.backend_resource_group_name }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ inputs.backend_storage_account_name }}
      BACKEND_CONTAINER_NAME: ${{ inputs.backend_container_name }}
      BACKEND_KEY: ${{ inputs.backend_key }}
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory}}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.7

    - name: 'Terraform Init'
      run: |
        terraform init \
        -backend-config="resource_group_name=${BACKEND_RESOURCE_GROUP_NAME}" \
        -backend-config="storage_account_name=${BACKEND_STORAGE_ACCOUNT_NAME}" \
        -backend-config="container_name=${BACKEND_CONTAINER_NAME}" \
        -backend-config="key=${BACKEND_KEY}"

    - name: 'Terraform Destroy'
      run: |
        terraform destroy -auto-approve \
        -var="=${}" \
